---
version : '3.9'

services:
  db:
    container_name: test_work_db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - test_work_db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 3s
    networks:
      - test_work

  api:
    container_name: test_work_api
    build:
      dockerfile: docker/local/Dockerfile
      context: ../../
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../../.env
    ports:
      - 8081:8081
    volumes:
      - ../../:/code
    command: python manage.py runserver 0.0.0.0:8081
    networks:
      - test_work


  redis_test_work:
    container_name: redis_test_work
    image: redis
    restart: always
    env_file:
      - ../../.env
#    environment:
#      REDIS_HOST: ${REDIS_HOST}
#      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 63799:6379

    networks:
      - test_work

networks:
  test_work:
    driver: bridge

volumes :
  test_work_db:
